snippet context
context "$1" do
	${0:${VISUAL:# assertions}}
end
endsnippet

snippet unittest
import unittest

class TestStringMethods(unittest.TestCase):

    def test_upper(self):
        self.assertEqual('foo'.upper(), 'FOO')

    def test_isupper(self):
        self.assertTrue('FOO'.isupper())
        self.assertFalse('Foo'.isupper())

    def test_split(self):
        s = 'hello world'
        self.assertEqual(s.split(), ['hello', 'world'])
        # check that s.split fails when the separator is not a string
        with self.assertRaises(TypeError):
            s.split(2)
endsnippet

snippet subprocess
# calls are blocking
import subprocess
output = subprocess.check_output(['ls', '-l'])
endsnippet

snippet strptime
from datetime import datetime
date_obj = datetime.strptime('May 29 2015  2:45PM', '%B %d %Y %I:%M%p')
endsnippet


snippet strftime
from datetime import datetime
date_obj = datetime.now()
date_string = date_obj.strftime('%B %d %Y %I:%M%p')
endsnippet
