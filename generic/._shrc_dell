# vim: set filetype=sh :
source ~/privateconfigs/.bash_dell_private
source ~/privateconfigs/.bash_dell_aliases
source /usr/local/bin/virtualenvwrapper.sh

export ORACLE_HOME=/u01/app/oracle/product/11.2.0/xe
export ORACLE_SID=XE
export NLS_LANG=`$ORACLE_HOME/bin/nls_lang.sh`
export ORACLE_BASE=/u01/app/oracle
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$LD_LIBRARY_PATH
export PATH=$ORACLE_HOME/bin:$PATH:/home/patrick/bin
export PATH=$PATH:/home/patrick/dev/software/linux-amd64/

export CMS_HOME="/home/patrick/dev/cms/"
export CMS_INSTALLER_HOME="/home/patrick/dev/workspace-microservices/iris-cms-service-installer"
export LD_LIBRARY_PATH=/u01/app/oracle/product/11.2.0/xe/lib/
export ANT_HOME=/home/patrick/dev/process-tools-5-25
#export JAVA_HOME=/usr/lib/jvm/java-8-oracle
export JAVA_HOME=/usr/lib/jvm/java-7-oracle


#Metrix variables
export METRIX_HOME=/home/patrick/dev/tvmetrix
export EXTRACTOR="$METRIX/extractor"

# Default env to load tmux sessions from
# in ~/Configs/tmux/sessions/tmux-session.sh
TMUX_SESSION_ENV=work


#====================
# Cluster stuff
#====================

get-podnames() {
  echo $(kubectl get pods --all-namespaces | grep $1 | awk '{print $2}')
}

#--------------------
# alluxio
#--------------------
alluxio-kubectl-prefix(){
    alluxio_name=`get-podnames alluxio-refresh`
    echo -n "Connecting to alluxio @ "
    if [[ -z "$alluxio_name" ]]; then
        echo "";
        echo "======WARNING=======";
        echo "No alluxio pod found";
        echo "====================";
    else
        echo $alluxio_name
        kubectl exec -ti -n tvmetrix $alluxio_name -- "${@:1}";
    fi

}

alluxio-kubectl(){
    alluxio-kubectl-prefix bash
}

alluxio-kubectl-tail-logs(){
    alluxio-kubectl-prefix tail -f /opt/alluxio/logs/user_root.log
}


#--------------------
# drill
#--------------------
drill-kubectl-prefix(){
    drill_name=`get-podnames drill-alluxio-0`
    echo -n "Connecting to drill @ "
    echo $drill_name
    kubectl exec -ti -n tvmetrix $drill_name -c drill -- "${@:1}";
}


drill-kubectl(){
    drill-kubectl-prefix /opt/apache-drill-1.8.0-SNAPSHOT/bin/sqlline -u "jdbc:drill:drillbit=localhost;user=ps"
}

drill-kubectl-logs(){
    cluster_number=0
    if [[ ! -z $1 ]]; then
        cluster_number=$1
    fi
    drill_name=`get-podnames drill-alluxio-$cluster_number`
    kubectl logs -f $drill_name -c drill -n tvmetrix
}

#--------------------
# tvmetrix-reports
#--------------------
reports-sleep(){
    reports_sleep_name="`get-podnames reports-sleep`";
    echo -n "Connecting to tvmetrix-reports @ "
    echo $reports_sleep_name
    kubectl exec -ti -n tvmetrix $reports_sleep_name -- bash;
}
